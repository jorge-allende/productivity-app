name: Pull Request Checks

on:
  pull_request:
    types: [opened, synchronize, reopened]

env:
  NODE_VERSION: '18.x'
  CI: true

jobs:
  pr-validation:
    name: PR Quality Gates
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Debug - Environment and Files
        run: |
          echo "=== Environment Info ==="
          echo "Node version: $(node --version)"
          echo "NPM version: $(npm --version)"
          echo "Current directory: $(pwd)"
          echo ""
          echo "=== Test file contents ==="
          cat src/App.test.tsx
          echo ""
          echo "=== Running individual checks ==="

      - name: TypeScript type check
        run: |
          echo "Running TypeScript check..."
          npm run typecheck || {
            EXIT_CODE=$?
            echo "::error::TypeScript check failed with exit code $EXIT_CODE"
            exit $EXIT_CODE
          }

      - name: Run ESLint
        run: |
          echo "Running ESLint..."
          npx eslint src --ext .ts,.tsx --max-warnings 0 || {
            EXIT_CODE=$?
            echo "::error::ESLint failed with exit code $EXIT_CODE"
            echo "Running ESLint on test file specifically for debugging:"
            npx eslint src/App.test.tsx --debug || true
            exit $EXIT_CODE
          }

      - name: Run tests with coverage
        run: |
          echo "Running tests..."
          npm test -- --coverage --watchAll=false --testTimeout=10000 --passWithNoTests --verbose || {
            EXIT_CODE=$?
            echo "::error::Tests failed with exit code $EXIT_CODE"
            exit $EXIT_CODE
          }
        env:
          CI: true

      - name: Test build process
        run: |
          echo "Running build..."
          npm run build || {
            EXIT_CODE=$?
            echo "::error::Build failed with exit code $EXIT_CODE"
            exit $EXIT_CODE
          }

      - name: Check bundle size
        run: |
          npm run build
          du -sh build/
          echo "Bundle built successfully"

      - name: Validate package.json
        run: npm ls --depth=0

  security-scan:
    name: Security & Dependencies
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        run: npm audit --audit-level=critical

      - name: Check for outdated dependencies
        run: npm outdated || true

  pr-summary:
    name: PR Summary
    runs-on: ubuntu-latest
    needs: [pr-validation, security-scan]
    if: always()
    
    steps:
      - name: PR Status Summary
        run: |
          echo "## Pull Request Validation Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [[ "${{ needs.pr-validation.result }}" == "success" ]]; then
            echo "✅ Code quality checks passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Code quality checks failed" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [[ "${{ needs.security-scan.result }}" == "success" ]]; then
            echo "✅ Security scan passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Security scan failed" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Ready for review! 🚀" >> $GITHUB_STEP_SUMMARY